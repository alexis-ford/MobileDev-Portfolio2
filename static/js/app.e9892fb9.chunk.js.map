{"version":3,"sources":["assets/check.png","screens/UpperBodyScreen.js","screens/LowerBodyScreen.js","screens/HomeScreen.js","screens/WorkoutCompleteScreen.js","App.js"],"names":["module","exports","UpperBodyWorkoutScreen","route","navigation","exerciseKey","params","useState","count","setCount","set","setSet","upperExercises","useContext","UpperContext","currentExercise","find","ex","key","useCallback","navigate","View","style","styles","container","Text","exerciseStyles","head","name","instructions","tracker","flexDirection","Pressable","homeStyles","button","onPress","text","suggestedExercise","StatusBar","UpperBodyScreen","upperBody","FlatList","data","renderItem","item","Button","color","title","StyleSheet","create","textAlign","fontWeight","fontSize","marginBottom","fontStyle","LowerBodyWorkoutScreen","lowerExercises","LowerContext","LowerBodyScreen","lowerBody","HomeScreen","toUpperBody","toLowerBody","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","margin","lineHeight","letterSpacing","WorkoutCompleteScreen","src","check","width","height","completeStyles","React","createContext","Stack","createNativeStackNavigator","App","Provider","value","NavigationContainer","Navigator","Screen","component","flex"],"mappings":"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","file":"static/js/app.e9892fb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check.eb44e223.png\";","import { StatusBar } from \"expo-status-bar\"\nimport { useCallback, useContext, useState } from \"react\"\nimport { Button, View, Text, StyleSheet, FlatList, Pressable } from \"react-native\"\nimport {  styles, UpperContext } from \"../App\"\nimport { homeStyles } from \"./HomeScreen\"\n\nexport function UpperBodyWorkoutScreen ({route, navigation}) {\n  let {exerciseKey} = route.params\n  let [count, setCount] = useState(0)\n  let [set,setSet] = useState(0)\n  let upperExercises = useContext(UpperContext)\n  let currentExercise = upperExercises.find(ex => ex.key === exerciseKey)\n  let toComplete =  useCallback (() => {\n    navigation.navigate(\"WorkoutComplete\")\n  })  \n\n  \n  return (\n    <View style={styles.container}>\n      <Text style={exerciseStyles.head}>{currentExercise.name}</Text>\n      <Text style={exerciseStyles.instructions}>4 sets x 10 reps</Text>\n      <Text style={exerciseStyles.tracker}>Sets: {set} Reps: {count}</Text>\n      <View style={{ flexDirection: \"row\" }}>\n        <Pressable style={homeStyles.button} onPress={() => setCount(count=>count+1)}>\n          <Text style={homeStyles.text}>Add Rep</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => setCount(0)}>\n          <Text style={homeStyles.text}>Reset Reps</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => setSet(set=>set+1)}>\n          <Text style={homeStyles.text}>Add Set</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => setSet(0)}>\n          <Text style={homeStyles.text}>Reset Sets</Text>\n        </Pressable>\n      </View>\n\n      <Pressable  style={homeStyles.button} onPress={() => navigation.navigate(\"UpperBodyWorkout\",\n        {exerciseKey: currentExercise.suggestedExercise})}>\n          <Text style={homeStyles.text}>{`Next Exercise: ${upperExercises.find(ex => ex.key == currentExercise.suggestedExercise).name}`}</Text>\n      </Pressable>\n  \n      \n      <View style={{ flexDirection: \"row\" }}>\n        <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"UpperBody\")}>\n          <Text style={homeStyles.text}>Back To Exercise Selection</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"Home\")}>\n          <Text style={homeStyles.text}>Home</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"WorkoutComplete\")}>\n          <Text style={homeStyles.text}>Workout Finished</Text>\n        </Pressable>\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n }\n  \n export default function UpperBodyScreen ({navigation, route }) {\n    let upperExercises = useContext(UpperContext)\n    let upperBody =  useCallback (({ key }) => {\n      navigation.navigate(\"UpperBodyWorkout\", {exerciseKey: key, count: 0, upperExercises})\n    })\n\n    return (\n        <View style={styles.container}>\n          <Text style={exerciseStyles.head}>Choose Your First Exercise</Text>\n          <FlatList data={upperExercises} renderItem={({ item }) =>\n            <Button color=\"black\" onPress={() => upperBody(item)} title={item.name}></Button>\n          }/>\n          <StatusBar style=\"auto\" />\n        </View>\n      \n    )\n }\n \n\n\nexport const exerciseStyles = StyleSheet.create({\n  head: {\n      textAlign: 'center',\n      fontWeight: 'bold',\n      fontSize: 40,\n      marginBottom: 10\n  },\n  instructions: {\n    textAlign: 'center',\n    fontStyle: 'italic',\n    fontSize: 30,\n    marginBottom: 10\n},\ntracker: {\n  textAlign: 'center',\n  fontSize: 20,\n  marginBottom: 10\n},\n})","import { StatusBar } from \"expo-status-bar\"\nimport { useCallback, useContext, useState } from \"react\"\nimport { Button, View, Text, FlatList, StyleSheet, Pressable } from \"react-native\"\nimport {  LowerContext, styles } from \"../App\"\nimport { homeStyles } from \"./HomeScreen\"\nimport { exerciseStyles } from \"./UpperBodyScreen\"\n\n\nexport function LowerBodyWorkoutScreen ({route, navigation}) {\n  let {exerciseKey} = route.params\n  let [count, setCount]= useState(0)\n  let [set,setSet] = useState(0)\n  let lowerExercises = useContext(LowerContext)\n  let currentExercise = lowerExercises.find(ex => ex.key === exerciseKey)\n  let toComplete =  useCallback (() => {\n    navigation.navigate(\"WorkoutComplete\")\n  })  \n  return (\n    <View style={styles.container}>\n      <Text style={exerciseStyles.head}>{currentExercise.name}</Text>\n      <Text style={exerciseStyles.instructions}>4 sets x 10 reps</Text>\n      <Text style={exerciseStyles.tracker}>Sets: {set} Reps: {count}</Text>\n      <View style={{ flexDirection: \"row\" }}>\n        <Pressable style={homeStyles.button} onPress={() => setCount(count=>count+1)}>\n          <Text style={homeStyles.text}>Add Rep</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => setCount(0)}>\n          <Text style={homeStyles.text}>Reset Reps</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => setSet(set=>set+1)}>\n          <Text style={homeStyles.text}>Add Set</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => setSet(0)}>\n          <Text style={homeStyles.text}>Reset Sets</Text>\n        </Pressable>\n      </View>\n\n\n      <Pressable  style={homeStyles.button} onPress={() => navigation.navigate(\"LowerBodyWorkout\",\n        {exerciseKey: currentExercise.suggestedExercise})}>\n          <Text style={homeStyles.text}>{`Next Exercise: ${lowerExercises.find(ex => ex.key == currentExercise.suggestedExercise).name}`}</Text>\n      </Pressable>\n  \n      \n      <View style={{ flexDirection: \"row\" }}>\n        <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"LowerBody\")}>\n          <Text style={homeStyles.text}>Back To Exercise Selection</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"Home\")}>\n          <Text style={homeStyles.text}>Home</Text>\n        </Pressable>\n        <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"WorkoutComplete\")}>\n          <Text style={homeStyles.text}>Workout Finished</Text>\n        </Pressable>\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n }\n\nexport default function LowerBodyScreen ({ route, navigation }) {\n  let lowerExercises = useContext(LowerContext)\n  let lowerBody =  useCallback (({ key }) => {\n    navigation.navigate(\"LowerBodyWorkout\", {exerciseKey: key, count: 0, lowerExercises})\n  })\n  return (\n    <View style={styles.container}>\n      <Text style={exerciseStyles.head}>Choose Your First Exercise</Text>\n      <FlatList data={lowerExercises} renderItem={({ item }) =>\n        <Button color=\"black\" title={item.name} onPress={() => lowerBody(item)}></Button>\n      }/>\n      <StatusBar style=\"auto\" />\n  </View>\n    )\n}\n\n","import { StatusBar } from \"expo-status-bar\"\nimport { useCallback } from \"react\"\nimport { Button, View, Text, StyleSheet, FlatList, Pressable } from \"react-native\"\nimport {  styles } from \"../App\"\nimport UpperBodyScreen from \"./UpperBodyScreen\"\nimport LowerBodyScreen from \"./LowerBodyScreen\"\n\nexport default function HomeScreen({ navigation }) {\n\n    let toUpperBody =  useCallback (() => {\n        navigation.navigate(\"UpperBody\")\n    })\n    let toLowerBody =  useCallback (() => {\n        navigation.navigate(\"LowerBody\")\n    })\n    return (\n        <View style={styles.container}>\n            <Text style={homeStyles.title}>Welcome To Fundamental Fitness!</Text>\n            <Text style={homeStyles.head}>Choose Your Workout Split.</Text>\n            <Pressable style={homeStyles.button} onPress={toUpperBody}>\n                <Text style={homeStyles.text}>Upper Body</Text>\n            </Pressable>\n            <Pressable style={homeStyles.button} onPress={toLowerBody}>\n                <Text style={homeStyles.text}>Lower Body</Text>\n            </Pressable>\n            <StatusBar style=\"auto\" />\n        </View>\n    )\n}\n\nexport const homeStyles = StyleSheet.create({\n    title: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 40,\n        marginBottom: 30\n    },\n    head: {\n        textAlign: 'center',\n        fontStyle: 'italic',\n        fontSize: 20,\n        marginBottom: 10\n    },\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'black',\n        margin: 10,\n      },\n      text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n      },\n})","import { StatusBar } from \"expo-status-bar\"\nimport { View, Text, StyleSheet, Pressable } from \"react-native\"\nimport {  styles } from \"../App\"\nimport { homeStyles } from \"./HomeScreen\"\nimport check from \"/Users/alexis/MobileDev-Portfolio2/Option2/exerciseapp/assets/check.png\"\n\nexport default function WorkoutCompleteScreen ({ navigation}){\n\n    return (\n        <View style={styles.container}>\n            <img src={check} width={250} height={250} />\n            <Text style={completeStyles.text}>Workout Finished.</Text>\n            <Text style={completeStyles.text}>Great Job!</Text>\n            <Pressable style={homeStyles.button} onPress={() => navigation.navigate(\"Home\")}>\n                <Text style={homeStyles.text}>Home</Text>\n            </Pressable>\n            <StatusBar style=\"auto\" />\n        </View>\n    )\n}\n\nlet completeStyles = StyleSheet.create({\n    text: {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 40,\n        marginBottom: 10\n    },\n\n  })","import { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { StatusBar } from 'expo-status-bar';\nimport { useCallback, useContext } from 'react';\nimport { StyleSheet, Text, View, Button, FlatList } from 'react-native';\nimport React from 'react';\nimport HomeScreen from './screens/HomeScreen'\nimport UpperBodyScreen from './screens/UpperBodyScreen';\nimport LowerBodyScreen from './screens/LowerBodyScreen';\nimport { UpperBodyWorkoutScreen } from './screens/UpperBodyScreen';\nimport { LowerBodyWorkoutScreen } from './screens/LowerBodyScreen';\nimport WorkoutCompleteScreen from './screens/WorkoutCompleteScreen';\n\n              //UPPER BODY EXERCISES\nlet upperExercises = [\n  {\n    name: \"Bench Press\",\n    key: \"1\",\n    suggestedExercise: \"2\",\n  },\n  {\n    name: \"Pull Ups\",\n    key: \"2\",\n    suggestedExercise: \"3\",\n  },\n  {\n    name: \"Seated Row\",\n    key: \"3\",\n    suggestedExercise: \"4\"\n  },\n  {\n    name: \"Military Shoulder Press\",\n    key: \"4\",\n    suggestedExercise: \"5\"\n  },\n  {\n    name: \"Tricep Pushdown\",\n    key: \"5\",\n    suggestedExercise: \"6\"\n  },\n  {\n    name: \"Preacher Curl\",\n    key: \"6\",\n    suggestedExercise: \"1\"\n  },\n]\nexport const UpperContext = React.createContext(upperExercises)\n\n\n              //LOWER BODY EXERCISES\nlet lowerExercises = [\n  {\n    name: \"Deadlift\",\n    key: \"1\",\n    suggestedExercise: \"2\",\n  },\n  {\n    name: \"Squat\",\n    key: \"2\",\n    suggestedExercise: \"3\",\n  },\n  {\n    name: \"Dumbbell Lunge\",\n    key: \"3\",\n    suggestedExercise: \"4\",\n  },\n  {\n    name: \"Barbell Hip Trusts\",\n    key: \"4\",\n    suggestedExercise: \"5\",\n  },\n  {\n    name: \"Standing Calf Raises\",\n    key: \"5\",\n    suggestedExercise: \"1\",\n  },\n  \n]\nexport const LowerContext = React.createContext(lowerExercises)\n\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {      \n  return (\n    <UpperContext.Provider value={upperExercises}>\n      <LowerContext.Provider value={lowerExercises}>\n        <NavigationContainer>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Home\" component={HomeScreen}  />\n            <Stack.Screen name=\"UpperBody\" component={UpperBodyScreen}/>\n            <Stack.Screen name=\"LowerBody\" component={LowerBodyScreen} />\n            <Stack.Screen name=\"UpperBodyWorkout\" component={UpperBodyWorkoutScreen} />\n            <Stack.Screen name=\"LowerBodyWorkout\" component={LowerBodyWorkoutScreen} />\n            <Stack.Screen name='WorkoutComplete' component={WorkoutCompleteScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </LowerContext.Provider>\n    </UpperContext.Provider>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"sourceRoot":""}